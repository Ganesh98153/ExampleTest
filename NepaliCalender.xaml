<Activity mc:Ignorable="sap sap2010" x:Class="NepaliCalender" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="390,317.3333333333333" sap2010:WorkflowViewState.IdRef="NepaliCalender_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="19">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="NepaliCalender" sap:VirtualizedContainerService.HintSize="400,252.66666666666666" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="try {&#xD;&#xA;&#x9;DateTime in_DateInAd = DateTime.Parse(in_Date);&#xD;&#xA;&#x9;NepaliCalendarBS.NepaliDate convertedDayInBS  = &#x9;NepaliCalendarBS.NepaliCalendar.Convert_AD2BS(in_DateInAd);&#xD;&#xA;&#x9;int thatDay = convertedDayInBS.Day;&#xD;&#xA;&#x9;int weekDay = convertedDayInBS.WeekDay;&#xD;&#xA;&#x9;int thatYear = convertedDayInBS.Year;&#xD;&#xA;&#x9;int thatMonth = convertedDayInBS.Month;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;string outBSMonth = thatMonth.ToString();&#xD;&#xA;&#x9;string outBSYear = thatYear.ToString();&#xD;&#xA;&#x9;int checkLengthMonth = outBSMonth.Length;&#xD;&#xA;&#xD;&#xA;&#x9;if (checkLengthMonth == 1) {&#xD;&#xA;&#x9;&#x9;outBSMonth = &quot;0&quot; + outBSMonth;&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;DataTable TempCalender = NepaliCalendarBS.NepaliCalendar.MakeCalendarDataTable(thatYear, thatMonth);&#xD;&#xA;&#x9;StringWriter sw = new StringWriter();&#xD;&#xA;&#x9;TempCalender.WriteXml(sw);&#xD;&#xA;&#x9;string result = sw.ToString();&#xD;&#xA;&#x9;string weekName = &quot;&quot;;&#xD;&#xA;&#xD;&#xA;&#x9;switch(weekDay)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;    case 1:&#xD;&#xA;&#x9;        weekName = &quot;sun&quot;;&#xD;&#xA;&#x9;        break;&#xD;&#xA;&#x9;    case 2:&#xD;&#xA;&#x9;        weekName = &quot;mon&quot;;&#xD;&#xA;&#x9;        break;&#xD;&#xA;&#x9;    case 3:&#xD;&#xA;&#x9;        weekName = &quot;tue&quot;;&#xD;&#xA;&#x9;        break;&#xD;&#xA;&#x9;    case 4:&#xD;&#xA;&#x9;        weekName = &quot;wed&quot;;&#xD;&#xA;&#x9;        break;&#xD;&#xA;&#x9;    case 5:&#xD;&#xA;&#x9;        weekName = &quot;thu&quot;;&#xD;&#xA;&#x9;        break;&#xD;&#xA;&#x9;    case 6:&#xD;&#xA;&#x9;        weekName = &quot;fri&quot;;&#xD;&#xA;&#x9;        break;&#xD;&#xA;&#x9;    case 7:&#xD;&#xA;&#x9;        weekName = &quot;sat&quot;;&#xD;&#xA;&#x9;        break;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;string concatString = &quot;&lt;&quot; + weekName + &quot;_bs_day&gt;&quot; + thatDay + &quot;&lt;/&quot; + weekName + &quot;_bs_day&gt;&quot;;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;int runningWeek = -1;&#xD;&#xA;&#x9;var SplittedList = result.Split(&quot;&lt;CalendarBS&gt;&quot;);&#xD;&#xA;&#x9;for (int i=0; i&lt;SplittedList.Length; i++)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;    if (SplittedList[i].Contains(concatString))&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;        runningWeek = i;&#xD;&#xA;&#x9;        break;&#xD;&#xA;&#x9;    }&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;out_WeekDate = runningWeek.ToString();&#xD;&#xA;&#x9;int checkWeekLength = out_WeekDate.Length;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;if (checkWeekLength == 1) {&#xD;&#xA;&#x9;&#x9;out_WeekDate = &quot;0&quot; + runningWeek.ToString();&#xD;&#xA;&#x9;Console.WriteLine(&quot;Running week is &quot; + out_WeekDate.ToString());&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#xD;&#xA;} catch (Exception e) {&#xD;&#xA;&#x9;Console.WriteLine(&quot;Invalid date and time&quot;);&#xD;&#xA;&#x9;out_WeekDate = &quot;-1&quot;;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; " DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="358,165.33333333333334" sap2010:WorkflowViewState.IdRef="InvokeCode_1" Language="CSharp">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_Date">
          <Literal x:TypeArguments="x:String">2023-01-17</Literal>
        </InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_WeekDate" />
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
  </Sequence>
</Activity>